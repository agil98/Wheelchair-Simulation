<launch>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description" command="$(find xacro)/xacro '$(find wheelchair_description)/urdf/wheelchair_2.0.urdf.xacro' " />

  <!-- Define wheelchair's default pose -->
  <arg name="x_pos" default="0"/>
  <arg name="y_pos" default="0"/>
  <arg name="z_pos" default="0.254"/>

    <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"  args="-urdf -model wheelchair -param robot_description -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos)"/>

  
  <!-- Start Gazebo with an empty world -->
  <include
    file="$(find gazebo_ros)/launch/empty_world.launch" >
    <arg name = "world_name" value="$(find wheelchair_gazebo)/worlds/ramps.world"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="verbose" value="true"/>
    <arg name="paused" value="true"/>
    <arg name="gui" value="true"/>
   </include>

  <node
    name="rviz" pkg="rviz" type="rviz" args="-d $(find wheelchair_gazebo)/launch/config.rviz" />

  <!-- ros_control launch file -->
  <include file="$(find wheelchair_control)/launch/wheelchair_control.launch"/>

  <!-- convert joint states to TF transforms for rviz, etc -->                               
  <node name="robot_state_publisher" pkg="robot_state_publisher"  type="robot_state_publisher" respawn = "false" output="screen">
  </node>

  <node name="rqt_robot_steering" pkg="rqt_robot_steering" type="rqt_robot_steering">
    <param name="default_topic" value="/mobile_base_controller/cmd_vel"/> 
  </node>

  <node name="rqt_gui" pkg="rqt_gui" type="rqt_gui" output="screen"> 
    <param name="default_topic" value="/SwingL_controller/command"/> 
  </node>

</launch>